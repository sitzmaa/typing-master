def merge_sort(arr):
    """Sort an array using the merge sort algorithm."""
    if len(arr) > 1:
        mid = len(arr) // 2
        left_half = arr[:mid]
        right_half = arr[mid:]

        merge_sort(left_half)
        merge_sort(right_half)

        i = j = k = 0

        while i < len(left_half) and j < len(right_half):
            if left_half[i] < right_half[j]:
                arr[k] = left_half[i]
                i += 1
            else:
                arr[k] = right_half[j]
                j += 1
            k += 1

        while i < len(left_half):
            arr[k] = left_half[i]
            i += 1
            k += 1

        while j < len(right_half):
            arr[k] = right_half[j]
            j += 1
            k += 1

# Test the merge sort function
numbers = [38, 27, 43, 3, 9, 82, 10]
merge_sort(numbers)
print(numbers)  # Output sorted list
[[END]]

def prime_numbers(n):
    """Return a list of prime numbers up to n."""
    primes = []
    for num in range(2, n + 1):
        for i in range(2, int(num ** 0.5) + 1):
            if num % i == 0:
                break
        else:
            primes.append(num)
    return primes

# Get prime numbers up to 50
print(prime_numbers(50))
[[END]]

def count_words(s):
    """Count the number of words in a string."""
    words = s.split()
    return len(words)

# Count words in a sample sentence
print(count_words("This is a sample sentence."))
[[END]]

def find_max(arr):
    """Return the maximum value from an array."""
    max_val = arr[0]
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val

# Find the maximum value in a list
print(find_max([1, 2, 3, 4, 5, 0, -1]))
[[END]]

def remove_duplicates(lst):
    """Remove duplicates from a list while preserving order."""
    seen = set()
    return [x for x in lst if not (x in seen or seen.add(x))]

# Remove duplicates from a sample list
print(remove_duplicates([1, 2, 2, 3, 4, 4, 5]))
[[END]]
