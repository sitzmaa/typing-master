def selection_sort(arr):
    """Sort an array using the selection sort algorithm."""
    n = len(arr)
    for i in range(n):
        min_index = i
        for j in range(i + 1, n):
            if arr[j] < arr[min_index]:
                min_index = j
        arr[i], arr[min_index] = arr[min_index], arr[i]
    return arr

# Test selection sort
arr = [64, 25, 12, 22, 11]
print("Sorted array using selection sort:", selection_sort(arr))

def count_letters(s):
    """Count the number of letters and digits in a string."""
    letters = sum(c.isalpha() for c in s)
    digits = sum(c.isdigit() for c in s)
    return letters, digits

# Count letters and digits in a string
sample_text = "Hello World 123!"
letters, digits = count_letters(sample_text)
print(f"Letters: {letters}, Digits: {digits}")

def linear_search(arr, target):
    """Perform a linear search for the target in the array."""
    for index, value in enumerate(arr):
        if value == target:
            return index
    return -1

# Test linear search
numbers = [1, 3, 5, 7, 9]
target = 7
print(f"Index of {target}: {linear_search(numbers, target)}")

def longest_word(sentence):
    """Return the longest word in a sentence."""
    words = sentence.split()
    longest = max(words, key=len)
    return longest

# Find the longest word in a sentence
sentence = "The quick brown fox jumped over the lazy dog"
print(f"Longest word: {longest_word(sentence)}")

def matrix_multiplication(A, B):
    """Multiply two matrices A and B."""
    if len(A[0]) != len(B):
        raise ValueError("Number of columns in A must equal number of rows in B.")
    result = [[0 for _ in range(len(B[0]))] for _ in range(len(A))]
    for i in range(len(A)):
        for j in range(len(B[0])):
            for k in range(len(B)):
                result[i][j] += A[i][k] * B[k][j]
    return result

# Test matrix multiplication
A = [[1, 2, 3], [4, 5, 6]]
B = [[7, 8], [9, 10], [11, 12]]
print("Matrix multiplication result:", matrix_multiplication(A, B))
